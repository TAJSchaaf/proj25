geom_point()
filter(berlin_rent$zipCode = 14193)
filter(berlin_rent$zipCode == 14193)
print(berlin_rent$zipCode == 14193)
filter(berlin_rent, zipCode == 14193)
colSums((is.na(berlin_rent)))
# Sample mapping of zip codes to neighborhoods
zip_to_neighborhood <- list(
"Mitte" = c(10115, 10117, 10119, 10178, 10179, 10435,10551, 10553, 10555, 10557, 10559, 13353,10555, 10557,10557, 10785, 10787, 13347, 13349, 13351, 13353, 13357, 13359, 13407, 13409, 13347, 13353, 13355, 13357, 13359, 13409),
"Kreuzberg" = c(10961, 10963, 10965, 10967, 10969, 10997, 10999),
"Pankow" = c(10405, 10407, 10409, 10435, 10437, 10439, 13187, 13189),
# Add all other neighborhoods similarly
"Charlottenburg" = c(10585, 10587, 10589, 10623, 10625, 10627, 10629),
"Spandau" = c(13581, 13583, 13585, 13587, 13589, 13591, 13593, 13595, 13597, 13599),
"Steglitz" = c(12157, 12161, 12163, 12165, 12167, 12169),
"Tempelhof" = c(12099, 12101, 12103, 12105, 12107, 12109),
"Neukoelln" = c(12043, 12045, 12047, 12049, 12051, 12053, 12055, 12057, 12059),
"Treptow" = c(12435, 12437, 12439, 12487, 12489),
"Marzahn" = c(12679, 12681, 12683, 12685, 12687, 12689),
"Lichtenberg" = c(10315, 10317, 10318, 10319, 10365, 10367, 10369),
"Reinickendorf" = c(13403, 13405, 13407, 13409, 13435, 13437, 13439, 13469, 13479)
)
# Convert the list to a data frame
zip_df <- do.call(rbind, lapply(names(zip_to_neighborhood), function(neighborhood) {
data.frame(zipCode = zip_to_neighborhood[[neighborhood]], neighborhood = neighborhood, stringsAsFactors = FALSE)
}))
# Merge the berlin_rent data frame with the zip_df to get the neighborhood
berlin_rent <- merge(berlin_rent, zip_df, by = "zipCode", all.x = TRUE)
# View the updated berlin_rent data frame
print(berlin_rent)
colSums((is.na(berlin_rent)))
# View the updated data frame
table(berlin_rent$neighborhood.y)
table(berlin_rent$zipCode)
View(surveyA)
zipToRegion <- c(
"10" = "area 10",
"11" = "area 11",
"12" = "area 12",
"13" = "area 13",
"14" = "area 14"
)
# Add neighborhood column to the data frame
berlin_rent <- berlin_rent %>%
mutate(zipcodeRegion = zip_to_neighborhood[substr(as.character(zipCode), 1, 4)])
# View the updated data frame
table(berlin_rent$zipcodeRegion)
# View the updated data frame
print(berlin_rent)
# Add neighborhood column to the data frame
berlin_rent <- berlin_rent %>%
mutate(zipcodeRegion = zipToRegion[substr(as.character(zipCode), 1, 2)])
# View the updated data frame
table(berlin_rent$zipcodeRegion)
berlin_rent%>%
ggplot(aes(x = zipcodeRegion, y = totalRent)) +
geom_point()
mode(totalRent, zipcodeRegion = "14XXX")
mode(berlin_rent$totalRent, zipcodeRegion = "14XXX")
mode(berlin_rent$totalRent)
mean(berlin_rent$totalRent)
mean(berlin_rent$totalRent, zipcodeRegion = "14XXX")
mean(berlin_rent$totalRent, berlin_rent$zipcodeRegion = "14XXX")
mean(berlin_rent$totalRent, zipcodeRegion = "14XXX")
mean_rent_by_neighborhood <- berlin_rent %>%
group_by(zipcodeRegion) %>%
summarize(mean_totalRent = mean(totalRent, na.rm = TRUE))
print(mean_rent_by_neighborhood)
summarise(zipcodeRegion = "14XXX")
berlin_rent_14 <- berlin_rent %>%
filter(zipcodeRegion == "14XXX")
summarise(berlin_rent_14)
summary(berlin_rent_14)
berlin_rent_14 <- berlin_rent %>%
filter(zipcodeRegion == "14XXX")
summary(berlin_rent_14)
filter(berlin_rent, zipcodeRegion = "14XXX")
filter(berlin_rent, zipcodeRegion == "14XXX")
summary(filter(berlin_rent, zipcodeRegion == "14XXX"))
summary(filter(berlin_rent, zipcodeRegion == "13XXX"))
summary(berlin_rent)
summary(filter(berlin_rent, zipcodeRegion == "13XXX"))
berlin_rent = rent_data %>%
filter(regio2 == "Berlin") %>%
select(c(serviceCharge, baseRent, totalRent, noRooms, livingSpace, yearConstructed, zipCode, heatingType, condition, balcony, cellar, hasKitchen, lift, garden, barrierFree))
berlin_rent$heatingType = as.factor(berlin_rent$heatingType)
berlin_rent$zipCode = as.factor(berlin_rent$zipCode)
berlin_rent$condition = as.factor(berlin_rent$condition)
berlin_rent$balcony = as.factor(berlin_rent$balcony)
berlin_rent$cellar = as.factor(berlin_rent$cellar)
berlin_rent$hasKitchen = as.factor(berlin_rent$hasKitchen)
berlin_rent$lift = as.factor(berlin_rent$lift)
berlin_rent$garden = as.factor(berlin_rent$garden)
berlin_rent$barrierFree = as.factor(berlin_rent$barrierFree)
# filter out missing data
berlin_rent = berlin_rent %>%
filter(!is.na(livingSpace)) %>%
filter(!is.na(totalRent)) %>%
filter(!is.na(serviceCharge)) %>%
filter(!is.na(heatingType))
# filter out instances where totalRent is less than baseRent
berlin_rent = berlin_rent %>%
filter(totalRent >= baseRent)
# filter out livingSpace = 0
berlin_rent = filter(berlin_rent, livingSpace > 0)
# filter out heatingType = no_information
berlin_rent = filter(berlin_rent, heatingType != "no_information")
# filter out condition = no_information
berlin_rent = filter(berlin_rent, condition != "no_information")
#remove outliers in livingSpace and totalRent
berlin_rent = filter(berlin_rent, livingSpace <= 300)
berlin_rent = filter(berlin_rent, totalRent <= 7500)
berlin_rent%>%
ggplot(aes(x = livingSpace, y = totalRent)) +
geom_point()
berlin_rent%>%
ggplot(aes(x = livingSpace, y = totalRent)) +
geom_point() +
ggtitle("Scatterplot of cleaned livingSpace and totalRent")
summary(berlin_rent)
berlin_rent%>%
mutate(pricePerMeter, totalRent/livingSpace)
berlin_rent <- berlin_rent%>%
mutate(pricePerMeter, totalRent/livingSpace)
berlin_rent <- berlin_rent%>%
mutate(pricePerMeter = totalRent/livingSpace)
summary(berlin_rent)
# Add neighborhood column to the data frame
berlin_rent <- berlin_rent %>%
mutate(region = zipToRegion[substr(as.character(zipCode), 1, 2)])
# View the updated data frame
table(berlin_rent$zipcodeRegion)
# View the updated data frame
table(berlin_rent$region)
berlin_rent_14 <- berlin_rent %>%
filter(region == "14XXX")
summary(berlin_rent_14)
summary(filter(region == "14XXX"))
summary(filter(berlin_rent$region == "14XXX"))
filter(berlin_rent$region == "14XXX")
filter(berlin_rent, region == "14XXX")
print(berlin_rent$region == "14XXX")
summary(berlin_rent)
berlin_rent$region = as.factor(berlin_rent$region)
s
summary(berlin_rent)
summary(filter(berlin_rent, zipcodeRegion == "13XXX"))
summary(filter(berlin_rent, region == "13XXX"))
hist(berlin_rent$pricePerMeter, breaks = 100)
berlin_rent%>%
ggplot(aes(x = heatingType, y = totalRent)) +
geom_point() +
ggtitle("Scatterplot of cleaned livingSpace and totalRent")
filter(berlin_rent, region = "14XXX")
filter(berlin_rent, region == "14XXX")
zipToRegion <- c(
"10" = "10XXX",
"12" = "12XXX",
"13" = "13XXX",
"14" = "14XXX"
)
# Add neighborhood column to the data frame
berlin_rent <- berlin_rent %>%
mutate(region = zipToRegion[substr(as.character(zipCode), 1, 2)])
filter(berlin_rent, region == "14XXX")
summary(filter(berlin_rent, region == "14XXX"))
summary(filter(berlin_rent, region =="10XXX"))
summary(filter(berlin_rent, region =="14XXX"))
summary(filter(berlin_rent, region =="12XXX"))
berlin_rent%>%
ggplot(aes(x = region, y = totalRent)) +
geom_point() +
ggtitle("Scatterplot of cleaned livingSpace and totalRent")
berlin_rent%>%
ggplot(aes(x = hasKitchen, y = totalRent)) +
geom_point() +
ggtitle("Scatterplot of kitchen and totalRent")
berlin_rent%>%
ggplot(aes(x = hasKitchen, y = totalRent, z=balcony)) +
geom_point() +
ggtitle("Scatterplot of kitchen and totalRent")
berlin_rent%>%
ggplot(aes(x = hasKitchen, y = totalRent, size=balcony)) +
geom_point() +
ggtitle("Scatterplot of kitchen and totalRent")
balcony
berlin_rent%>%
ggplot(aes(x = region, y = totalRent, size=balcony)) +
geom_point() +
ggtitle("Scatterplot of kitchen and totalRent")
berlin_rent%>%
ggplot(aes(x = region, y = totalRent, size=livingSpace)) +
geom_point() +
ggtitle("Scatterplot of kitchen and totalRent")
berlin_rent%>%
ggplot(aes(x = region, y = livingSpace, size=totalRent)) +
geom_point() +
ggtitle("Scatterplot of kitchen and totalRent")
berlin_rent%>%
ggplot(aes(x = region, y = livingSpace)) +
geom_point() +
ggtitle("Scatterplot of kitchen and totalRent")
library(tidyverse)
library(caTools)
library(patchwork)
# data import
rent_data = read.csv("rent_data_full.csv", header=TRUE)
# data import
rent_data = read.csv("rent_data_full.csv", header=TRUE)
# data import
rent_data = read.csv("rent_data_full.csv", header=TRUE)
# data import
rent_data = read.csv("/Users/Thea2/Desktop/rent_data_full.csv", header=TRUE)
str(rent_data)
names(rent_data)
sort(table(rent_data$regio2))
berlin_rent = rent_data %>%
filter(regio2 == "Berlin") %>%
select(c(serviceCharge, baseRent, totalRent, noRooms, livingSpace, yearConstructed, zipCode, heatingType, condition, balcony, cellar, hasKitchen, lift, garden, barrierFree))
str(berlin_rent)
summary(berlin_rent)
colSums((is.na(berlin_rent)))
berlin_rent$heatingType = as.factor(berlin_rent$heatingType)
berlin_rent$zipCode = as.factor(berlin_rent$zipCode)
berlin_rent$condition = as.factor(berlin_rent$condition)
berlin_rent$balcony = as.factor(berlin_rent$balcony)
berlin_rent$cellar = as.factor(berlin_rent$cellar)
berlin_rent$hasKitchen = as.factor(berlin_rent$hasKitchen)
berlin_rent$lift = as.factor(berlin_rent$lift)
berlin_rent$garden = as.factor(berlin_rent$garden)
berlin_rent$barrierFree = as.factor(berlin_rent$barrierFree)
# mapping of zip codes to districts
zip_to_district <- c(
# Mitte
"10115" = "Mitte", "10117" = "Mitte", "10119" = "Mitte", "10178" = "Mitte",
"10179" = "Mitte", "10551" = "Mitte", "10553" = "Mitte",
"10555" = "Mitte", "10557" = "Mitte", "10559" = "Mitte", "10785" = "Mitte",
"10787" = "Mitte", "13347" = "Mitte", "13349" = "Mitte", "13351" = "Mitte",
"13353" = "Mitte", "13355" = "Mitte", "13357" = "Mitte", "13359" = "Mitte",
# Friedrichshain-Kreuzberg
"10243" = "Friedrichshain-Kreuzberg", "10245" = "Friedrichshain-Kreuzberg",
"10247" = "Friedrichshain-Kreuzberg", "10249" = "Friedrichshain-Kreuzberg",
"10961" = "Friedrichshain-Kreuzberg", "10963" = "Friedrichshain-Kreuzberg",
"10965" = "Friedrichshain-Kreuzberg", "10967" = "Friedrichshain-Kreuzberg",
"10969" = "Friedrichshain-Kreuzberg", "10997" = "Friedrichshain-Kreuzberg",
"10999" = "Friedrichshain-Kreuzberg",
# Pankow
"10405" = "Pankow", "10407" = "Pankow", "10409" = "Pankow", "10435" = "Pankow",
"10437" = "Pankow", "10439" = "Pankow", "13086" = "Pankow", "13088" = "Pankow",
"13089" = "Pankow", "13125" = "Pankow", "13127" = "Pankow", "13129" = "Pankow",
"13156" = "Pankow", "13158" = "Pankow", "13159" = "Pankow", "13187" = "Pankow",
"13189" = "Pankow",
# Charlottenburg-Wilmersdorf
"10585" = "Charlottenburg-Wilmersdorf", "10587" = "Charlottenburg-Wilmersdorf",
"10589" = "Charlottenburg-Wilmersdorf", "10623" = "Charlottenburg-Wilmersdorf",
"10625" = "Charlottenburg-Wilmersdorf", "10627" = "Charlottenburg-Wilmersdorf",
"10629" = "Charlottenburg-Wilmersdorf", "10707" = "Charlottenburg-Wilmersdorf",
"10709" = "Charlottenburg-Wilmersdorf", "10711" = "Charlottenburg-Wilmersdorf",
"10713" = "Charlottenburg-Wilmersdorf", "10715" = "Charlottenburg-Wilmersdorf",
"10717" = "Charlottenburg-Wilmersdorf", "10719" = "Charlottenburg-Wilmersdorf",
"10789" = "Charlottenburg-Wilmersdorf", "14050" = "Charlottenburg-Wilmersdorf",
"14052" = "Charlottenburg-Wilmersdorf", "14053" = "Charlottenburg-Wilmersdorf",
"14055" = "Charlottenburg-Wilmersdorf", "14057" = "Charlottenburg-Wilmersdorf",
"14059" = "Charlottenburg-Wilmersdorf", "13627" = "Charlottenburg-Wilmersdorf",
"14193" = "Charlottenburg-Wilmersdorf", "14199" = "Charlottenburg-Wilmersdorf",
"14197" = "Charlottenburg-Wilmersdorf",
# Spandau
"13581" = "Spandau", "13583" = "Spandau", "13585" = "Spandau",
"13587" = "Spandau", "13589" = "Spandau", "13591" = "Spandau",
"13593" = "Spandau", "13595" = "Spandau", "13597" = "Spandau",
"13599" = "Spandau", "13629" = "Spandau", "14089" = "Spandau",
# Steglitz-Zehlendorf
"12163" = "Steglitz-Zehlendorf", "12165" = "Steglitz-Zehlendorf",
"12167" = "Steglitz-Zehlendorf", "12169" = "Steglitz-Zehlendorf",
"12203" = "Steglitz-Zehlendorf", "12205" = "Steglitz-Zehlendorf",
"12207" = "Steglitz-Zehlendorf", "12209" = "Steglitz-Zehlendorf",
"12247" = "Steglitz-Zehlendorf", "12249" = "Steglitz-Zehlendorf",
"14109" = "Steglitz-Zehlendorf", "14129" = "Steglitz-Zehlendorf",
"14163" = "Steglitz-Zehlendorf", "14165" = "Steglitz-Zehlendorf",
"14167" = "Steglitz-Zehlendorf", "14169" = "Steglitz-Zehlendorf",
"14195" = "Steglitz-Zehlendorf",
# Tempelhof-Schöneberg
"10777" = "Tempelhof-Schöneberg", "10779" = "Tempelhof-Schöneberg",
"10781" = "Tempelhof-Schöneberg", "10783" = "Tempelhof-Schöneberg",
"10823" = "Tempelhof-Schöneberg", "10825" = "Tempelhof-Schöneberg",
"10827" = "Tempelhof-Schöneberg", "10829" = "Tempelhof-Schöneberg",
"12101" = "Tempelhof-Schöneberg", "12103" = "Tempelhof-Schöneberg",
"12105" = "Tempelhof-Schöneberg", "12107" = "Tempelhof-Schöneberg",
"12109" = "Tempelhof-Schöneberg", "12157" = "Tempelhof-Schöneberg",
"12159" = "Tempelhof-Schöneberg", "12161" = "Tempelhof-Schöneberg",
"12099" = "Tempelhof-Schöneberg", "12277" = "Tempelhof-Schöneberg",
"12279" = "Tempelhof-Schöneberg", "12305" = "Tempelhof-Schöneberg",
"12307" = "Tempelhof-Schöneberg", "12309" = "Tempelhof-Schöneberg",
# Neukölln
"12043" = "Neukölln", "12045" = "Neukölln", "12047" = "Neukölln",
"12049" = "Neukölln", "12051" = "Neukölln", "12053" = "Neukölln",
"12055" = "Neukölln", "12057" = "Neukölln", "12059" = "Neukölln",
"12347" = "Neukölln", "12349" = "Neukölln",
"12351" = "Neukölln", "12353" = "Neukölln", "12355" = "Neukölln",
"12357" = "Neukölln", "12359" = "Neukölln",
# Treptow-Köpenick
"12435" = "Treptow-Köpenick", "12437" = "Treptow-Köpenick", "12439" = "Treptow-Köpenick",
"12459" = "Treptow-Köpenick", "12487" = "Treptow-Köpenick", "12489" = "Treptow-Köpenick",
"12524" = "Treptow-Köpenick", "12526" = "Treptow-Köpenick", "12527" = "Treptow-Köpenick",
"12555" = "Treptow-Köpenick", "12557" = "Treptow-Köpenick",
"12559" = "Treptow-Köpenick", "12587" = "Treptow-Köpenick", "12589" = "Treptow-Köpenick",
# Marzahn-Hellersdorf
"12619" = "Marzahn-Hellersdorf", "12621" = "Marzahn-Hellersdorf", "12623" = "Marzahn-Hellersdorf",
"12627" = "Marzahn-Hellersdorf", "12629" = "Marzahn-Hellersdorf", "12679" = "Marzahn-Hellersdorf",
"12681" = "Marzahn-Hellersdorf", "12683" = "Marzahn-Hellersdorf", "12685" = "Marzahn-Hellersdorf",
"12687" = "Marzahn-Hellersdorf", "12689" = "Marzahn-Hellersdorf",
# Lichtenberg
"10315" = "Lichtenberg", "10317" = "Lichtenberg", "10318" = "Lichtenberg",
"10319" = "Lichtenberg", "10365" = "Lichtenberg", "10367" = "Lichtenberg",
"10369" = "Lichtenberg", "13053" = "Lichtenberg", "13055" = "Lichtenberg",
"13057" = "Lichtenberg", "13059" = "Lichtenberg", "13051" = "Lichtenberg",
# Reinickendorf
"13403" = "Reinickendorf", "13405" = "Reinickendorf", "13407" = "Reinickendorf",
"13409" = "Reinickendorf", "13435" = "Reinickendorf", "13437" = "Reinickendorf",
"13439" = "Reinickendorf", "13469" = "Reinickendorf", "13467" = "Reinickendorf",
"13503" = "Reinickendorf", "13505" = "Reinickendorf", "13465" = "Reinickendorf",
"13507" = "Reinickendorf", "13509" = "Reinickendorf"
)
# Add the new column with districts
berlin_rent = berlin_rent %>%
mutate(district = factor(zip_to_district[as.character(zipCode)]))
# filter out missing data
berlin_rent = berlin_rent %>%
filter(!is.na(livingSpace)) %>%
filter(!is.na(totalRent)) %>%
filter(!is.na(serviceCharge)) %>%
filter(!is.na(heatingType)) %>%
filter(!is.na(district))
# filter out totalRent < baseRent
berlin_rent = filter(berlin_rent, totalRent >= baseRent)
# filter out livingSpace = 0
berlin_rent = filter(berlin_rent, livingSpace > 0)
# filter out heatingType = no_information
berlin_rent = filter(berlin_rent, heatingType != "no_information")
# filter out condition = no_information
berlin_rent = filter(berlin_rent, condition != "no_information")
# filter out livingSpace > 300
berlin_rent = filter(berlin_rent, livingSpace <= 300)
# filter out totalRent < 7500
berlin_rent = filter(berlin_rent, totalRent <= 7500)
# filter out serviceCharge = 0 & serviceCharge > 1250
berlin_rent = filter(berlin_rent, serviceCharge > 1)
berlin_rent = filter(berlin_rent, serviceCharge <= 1000)
# mutate noRooms if noRooms = 1.1 or noRooms = 2.2
berlin_rent = berlin_rent %>%
mutate(noRooms = if_else(noRooms == 1.1, 1, noRooms))
berlin_rent = berlin_rent %>%
mutate(noRooms = if_else(noRooms == 2.2, 2, noRooms))
# descriptive statistics
str(berlin_rent)
summary(berlin_rent)
mean(berlin_rent$totalRent)
sd(berlin_rent$totalRent)
min(berlin_rent$totalRent)
max(berlin_rent$totalRent)
median(berlin_rent$totalRent)
mean(berlin_rent$baseRent)
sd(berlin_rent$baseRent)
min(berlin_rent$baseRent)
max(berlin_rent$baseRent)
median(berlin_rent$baseRent)
mean(berlin_rent$serviceCharge)
sd(berlin_rent$serviceCharge)
min(berlin_rent$serviceCharge)
max(berlin_rent$serviceCharge)
median(berlin_rent$serviceCharge)
mean(berlin_rent$noRooms)
sd(berlin_rent$noRooms)
min(berlin_rent$noRooms)
max(berlin_rent$noRooms)
median(berlin_rent$noRooms)
mean(berlin_rent$livingSpace)
sd(berlin_rent$livingSpace)
min(berlin_rent$livingSpace)
max(berlin_rent$livingSpace)
median(berlin_rent$livingSpace)
# table heatingType
heatingType_table = table(berlin_rent$heatingType)
heatingType_table
# table condition
condition_table = table(berlin_rent$condition)
condition_table
noRooms_table = table(berlin_rent$noRooms)
noRooms_table
# table district
district_table = table(berlin_rent$district)
district_table
### graphs ###
berlin_rent %>%
ggplot(aes(x=totalRent)) +
labs(x = "Total Rent [€]", y = "Count", title = "Distribution of Total Apartment Rents in Berlin") +
theme_bw() +
geom_histogram(colour="deepskyblue4", fill="deepskyblue3", bins=38)+
scale_y_continuous(breaks = seq(0, 1200, by=200)) +
scale_x_continuous(breaks = seq(0, 8000, by=1000))
berlin_rent %>%
ggplot(aes(x=baseRent)) +
labs(x = "Base Rent [€]", y = "Count", title = "Distribution of Base Apartment Rents in Berlin") +
theme_bw() +
geom_histogram(colour="deepskyblue4", fill="deepskyblue3", bins=38)+
scale_y_continuous(breaks = seq(0, 1200, by=200)) +
scale_x_continuous(breaks = seq(0, 6500, by=1000))
berlin_rent %>%
ggplot(aes(x=serviceCharge)) +
labs(x = "Service Charge [€]", y = "Count", title = "Distribution of Apartment Service Charges in Berlin") +
theme_bw() +
geom_histogram(colour="deepskyblue4", fill="deepskyblue3", bins=38)+
scale_y_continuous(breaks = seq(0, 1200, by=200)) +
scale_x_continuous(breaks = seq(0, 1200, by=200))
berlin_rent %>%
ggplot(aes(x=as.character(noRooms))) +
labs(x = "Number of Rooms", y = "Count", title = "Berlin Apartment Room Numbers") +
theme_bw() +
geom_bar(colour="deepskyblue4", fill="deepskyblue3")+
scale_y_continuous(breaks = seq(0, 3000, by=400))
berlin_rent %>%
ggplot(aes(x=reorder(district, district, function(x)-length(x)))) +
labs(x = "District", y = "Count", title = "Berlin Apartment Districts") +
theme_bw() +
geom_bar(colour="deepskyblue4", fill="deepskyblue3") +
scale_y_continuous(breaks = seq(0, 3000, by=200)) +
scale_x_discrete(labels = c("Mitte", "Charlottenburg-\nWilmersdorf", "Treptow-\nKöpenick", "Pankow", "Friedrichshain-\nKreuzberg", "Steglitz\nZehlendorf", "Tempelholf\nSchöneberg", "Neukölln", "Spandau", "Reinickendorf", "Lichtenberg", "Marzahn-\nHellersdorf"),guide = guide_axis(angle=45))
berlin_rent %>%
ggplot(aes(x=reorder(heatingType, heatingType, function(x)-length(x)))) +
labs(x = "Heating Type", y = "Count", title = "Berlin Apartment Heating Types") +
theme_bw() +
geom_bar(colour="deepskyblue4", fill="deepskyblue3") +
scale_y_continuous(breaks = seq(0, 4000, by=500)) +
scale_x_discrete(labels = c("Central heating", "District heating", "Floor heating", "Self contained\ncentral heating", "Gas heating", "Combined heat\nand power plant", "Oil heating", "Heat pump", "Night storage\nheater", "Electric heating", "Wood pellet\nheating", "Stove heating"), guide = guide_axis(angle=45))
berlin_rent %>%
ggplot(aes(x=reorder(condition, condition, function(x)-length(x)))) +
labs(x = "Condition", y = "Count", title = "Berlin Apartment Conditions") +
theme_bw() +
geom_bar(colour="deepskyblue4", fill="deepskyblue3") +
scale_y_continuous(breaks = seq(0, 4000, by=500)) +
scale_x_discrete(labels = c("First time use", "Well kept", "Mint condition", "Modernized", "First time use\nafter refurbishment", "Refurbished", "Fully renovated", "Need of\nrenovation", "Negotiable"), guide = guide_axis(angle=45))
shiny::runApp('app')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
library(shiny); runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/new_poverty.R')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
runApp('Desktop/shiny.R')
shiny::runApp('Desktop/proj25/project25')
runApp('Desktop/proj25/project25')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
shiny::runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
shiny::runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
shiny::runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
runApp('Desktop/proj25/project2025finalshiny')
